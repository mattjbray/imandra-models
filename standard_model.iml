type quark = Up | Down | Charm | Strange | Top | Bottom

let up = Up
let down = Down
let charm = Charm
let strange = Strange
let top = Top
let bottom = Bottom

type lepton =
  | Electron | Muon | Tau
  | Electron_neutrino | Muon_neutrino | Tau_neutrino

type fermion =
  | Quark of quark
  | Lepton of lepton

type vector_boson =
  | Gluon
  | Photon
  | W
  | Z

type scalar_boson =
  | Higgs

type boson =
  | Vector of vector_boson
  | Scalar of scalar_boson

type particle =
  | Fermion of fermion
  | Boson of boson

module Spin = struct
  type t = Spin of Q.t

  let spin = function
    | Fermion _ -> Spin 0.5
    | Boson (Vector _ ) -> Spin 1.0
    | Boson (Scalar Higgs) -> Spin 0.0

  let (+) (Spin s1) (Spin s2) = Spin Real.(s1 + s2)
end

module Baryon = struct
    type t =
      { q1 : quark; q2: quark; q3: quark }

    let make q1 q2 q3 = { q1; q2; q3 }

    let spin t =
      Spin.(
       spin (Fermion (Quark t.q1)) +
       spin (Fermion (Quark t.q2)) +
       spin (Fermion (Quark t.q3))
     )
end
;;

verify (fun baryon ->
    Baryon.spin baryon = Spin.Spin 0.5
  );;


module Meson = struct
  type t =
    { q: quark; anti_q: quark }

  let make q anti_q = { q; anti_q }

  let spin t =
    Spin.(
      spin (Fermion (Quark t.q)) +
      spin (Fermion (Quark t.anti_q))
    )
end
